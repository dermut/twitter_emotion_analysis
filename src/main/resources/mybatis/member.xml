<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

  <select id="checkId" resultType="int" parameterType="String">
    SELECT COUNT(id) as cnt
    FROM member
    WHERE id=#{id}
  </select>
  
  <insert id="create" parameterType="MemberVO" > 
    INSERT INTO member(memberno, id, name, passwd, phone, email, birth, sex, grade, rdate)
    VALUES ((SELECT NVL(MAX(memberno), 0)+1 as memberno FROM member), #{id}, #{name}, #{passwd}, #{phone}, #{email}, #{birth}, #{sex}, 'N', sysdate)
  </insert>
  
  <select id="list" resultType="MemberVO">
    SELECT memberno, id, name, passwd, phone, email, birth, sex, grade, rdate
    FROM member
    ORDER BY memberno ASC
  </select>
  
  <select id="read" resultType="MemberVO" parameterType="int">
    SELECT memberno, id, name, passwd, phone, email, birth, sex, grade, rdate
    FROM member
    WHERE memberno = #{memberno}
  </select>
 
  <select id="readById" resultType="MemberVO" parameterType="String">
    SELECT memberno, id, name, passwd, phone, email, birth, sex, grade, rdate
    FROM member
    WHERE id = #{id}
  </select>
  
  <update id="update" parameterType="MemberVO">
    UPDATE member 
    SET name=#{name}, phone=#{phone}, email=#{email}
    WHERE memberno=#{memberno}
  </update>
  
  <update id="passwd_update" parameterType="HashMap">
    UPDATE member
    SET passwd=#{passwd}
    WHERE memberno=#{memberno}
  </update>
  
  <delete id="delete" parameterType="int"> 
    DELETE FROM member
    WHERE memberno=#{memberno}
  </delete>
  
  <!-- 만들어야하는 것 -->
  <!-- login  create_login_list login_list -->
  <select id="login" resultType="int" parameterType="MemberVO">
     SELECT COUNT(*) as cnt
     FROM member
     WHERE id=#{id} AND passwd=#{passwd}
  </select>
  
  <insert id="create_login_list" parameterType="LogVO" >
    INSERT INTO log(logno, ip, sf, memberno, rdate) 
    VALUES((SELECT NVL(MAX(logno), 0)+1 as logno FROM log), #{ip}, #{sf}, #{memberno}, sysdate)
  </insert>
  
  <select id="login_list" resultType="LogVO">
    SELECT logno, memberno, ip, rdate, sf
    FROM log
    ORDER BY logno DESC
  </select>
  
  <!-- 로그인 리스트 페이징 -->
  <select id="login_list_paging" resultType="LogVO">
    SELECT logno, ip, rdate, sf, memberno, r
    FROM(
        SELECT logno, ip, rdate, sf, memberno, rownum as r
        FROM(
           SELECT  logno, ip, rdate, sf, memberno
           FROM log
           WHERE memberno=#{memberno}  
           ORDER BY logno DESC
         )
    )
    WHERE <![CDATA[ r >= #{startNum} AND r <= #{endNum} ]]>
  </select>
  
  <!-- memberno별 검색된 레코드 개수 -->
  <select id="search_count" resultType="int">
    SELECT COUNT(*) as cnt
    FROM log
    WHERE memberno=#{memberno}
  </select>

</mapper> 